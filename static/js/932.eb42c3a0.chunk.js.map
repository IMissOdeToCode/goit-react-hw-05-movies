{"version":3,"file":"static/js/932.eb42c3a0.chunk.js","mappings":"uQACA,GAAgB,KAAO,gC,SCiDvB,EA3CyB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MAG1B,IAAI,IAFkBC,QAAQC,OAAOC,KAAKH,GAAOI,QAEjD,CAIA,IACEC,EAOEL,EAPFK,MACAC,EAMEN,EANFM,YACAC,EAKEP,EALFO,aAGAC,EAEER,EAFFQ,SACAC,EACET,EADFS,OAYIC,EAAWJ,EAAW,UAAMK,EAAAA,IAAN,OAAcL,GAAgBM,EAE1D,OACE,iCACE,cAAGC,UAAWC,EAAAA,KAAd,SAAyBT,KACzB,gBAAKU,IAAKL,EAAUM,IAAG,UAAKX,EAAL,WAAqBY,MAAM,SAElD,eAAGJ,UAAWC,EAAAA,UAAd,yBAA0CP,MAC1C,sCACA,uBAAIC,KACJ,oCACS,uBAnBQC,EAAOS,QAAO,SAACC,EAAMC,GAEtC,OADAD,EAAKE,KAAKD,EAASE,MACZH,CACR,GAAE,IAC6BI,KAAK,aAjBtC,CAoCF,E,SC/CD,EAAsB,+BAAtB,EAAgE,oCCmEhE,EArD0B,WAAO,IAAD,EAC9B,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOxB,EAAP,KAAcyB,EAAd,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAAe,OAARF,QAAQ,IAARA,GAAA,UAAAA,EAAUG,aAAV,eAAiBD,OAAQ,KAEtCE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAEMC,EAAAA,EAAAA,IAAaV,GAFnB,OAETW,EAFS,OAGfd,EAASc,EAAOC,MAHD,uDAINC,EAJM,KAINA,SACTd,EAASc,GALM,4EAAH,qDAShBJ,GACD,GAAE,CAACT,IAEJ,IAAMc,GAASC,EAAAA,EAAAA,cAAY,kBAAMb,EAASI,EAAf,GAAsB,CAACJ,EAAUI,IAM5D,OAJIR,GACFkB,QAAQC,IAAInB,EAAMc,KAAKM,iBAIvB,iCACE,mBAAQC,QAASL,EAAQ7B,UAAWC,EAApC,sBAIA,wBACE,SAAC,KAAD,CAASkC,GAAE,OAAUb,MAAO,CAAED,KAAMA,GAAQrB,UAAWC,EAAvD,qBAIF,wBACE,SAAC,KAAD,CAASkC,GAAE,UAAab,MAAO,CAAED,KAAMA,GAAQrB,UAAWC,EAA1D,wBAKF,SAAC,EAAD,CAAkBd,MAAOA,KACzB,SAAC,KAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/GeneralMovieInfo/GeneralMovieInfo.module.css?c456","components/GeneralMovieInfo/GeneralMovieInfo.jsx","webpack://react-homework-template/./src/components/pages/MovieOverviewPage/MovieOverviewPage.module.css?af9c","components/pages/MovieOverviewPage/MovieOverviewPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"text\":\"GeneralMovieInfo_text__9VZak\"};","import { IMAGE_w500 as image } from 'components/shared/utils/constants';\nimport defaultImgage from '../../default.jpg';\n\nimport PropTypes from 'prop-types';\n\nimport css from './GeneralMovieInfo.module.css';\n\nconst GeneralMovieInfo = ({ movie }) => {\n  const isObjectEmpty = Boolean(Object.keys(movie).length);\n\n  if (false === isObjectEmpty) {\n    return;\n  }\n\n  const {\n    title,\n    poster_path,\n    vote_average,\n    // runtime,\n    // release_date,\n    overview,\n    genres,\n  } = movie;\n\n  const getGenresString = () => {\n    const genresList = genres.reduce((list, genreObj) => {\n      list.push(genreObj.name);\n      return list;\n    }, []);\n    const genresString = genresList.join(', ');\n    return genresString;\n  };\n\n  const imageSrc = poster_path ? `${image}${poster_path}` : defaultImgage;\n\n  return (\n    <>\n      <p className={css.text}>{title}</p>\n      <img src={imageSrc} alt={`${title} poster`} width=\"300\" />\n\n      <p className={css.userScore}>User Score: {vote_average}</p>\n      <h2>overview</h2>\n      <p>{overview}</p>\n      <p>\n        Genres <b>{getGenresString()}</b>\n      </p>\n    </>\n  );\n};\n\nexport default GeneralMovieInfo;\n\nGeneralMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    poster_path: PropTypes.string,\n    vote_average: PropTypes.number,\n    // runtime,\n    // release_date,\n    overview: PropTypes.string,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        id: PropTypes.number,\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"MovieOverviewPage_btn__LmNoQ\",\"linkText\":\"MovieOverviewPage_linkText__ZlLdr\"};","import { useState, useEffect, useCallback } from 'react';\nimport {\n  useParams,\n  useNavigate,\n  Outlet,\n  useLocation,\n  NavLink,\n} from 'react-router-dom';\n\nimport GeneralMovieInfo from 'components/GeneralMovieInfo/GeneralMovieInfo';\n\nimport { getMovieById } from 'components/shared/services/themoviedb-api';\n\nimport css from './MovieOverviewPage.module.css';\n\nconst MovieOverviewPage = () => {\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState(null);\n\n  const { id } = useParams();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const from = location?.state?.from || '/';\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const result = await getMovieById(id);\n        setMovie(result.data);\n      } catch ({ response }) {\n        setError(response);\n        return;\n      }\n    };\n    fetchMovie();\n  }, [id]);\n\n  const goBack = useCallback(() => navigate(from), [navigate, from]);\n\n  if (error) {\n    console.log(error.data.status_message);\n  }\n\n  return (\n    <>\n      <button onClick={goBack} className={css.btn}>\n        Go back\n      </button>\n\n      <p>\n        <NavLink to={`cast`} state={{ from: from }} className={css.linkText}>\n          Cast\n        </NavLink>\n      </p>\n      <p>\n        <NavLink to={`reviews`} state={{ from: from }} className={css.linkText}>\n          Reviews\n        </NavLink>\n      </p>\n\n      <GeneralMovieInfo movie={movie} />\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieOverviewPage;\n"],"names":["movie","Boolean","Object","keys","length","title","poster_path","vote_average","overview","genres","imageSrc","image","defaultImgage","className","css","src","alt","width","reduce","list","genreObj","push","name","join","useState","setMovie","error","setError","id","useParams","navigate","useNavigate","location","useLocation","from","state","useEffect","fetchMovie","getMovieById","result","data","response","goBack","useCallback","console","log","status_message","onClick","to"],"sourceRoot":""}