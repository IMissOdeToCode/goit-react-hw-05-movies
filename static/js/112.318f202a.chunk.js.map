{"version":3,"file":"static/js/112.318f202a.chunk.js","mappings":"mMAeA,EAXkB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACXC,EAAcD,EAAdC,MAAOC,EAAOF,EAAPE,GACTC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC,KAAD,CAAMC,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMJ,GAA1C,UACE,wBAAKF,KAGV,ECDD,EARkB,SAAC,GAAgB,IAC3BO,EAD0B,EAAbC,OACKC,KAAI,SAAAV,GAC1B,OAAO,SAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAME,GAC9B,IAED,OAAO,wBAAKM,GACb,C,gKCRD,EAF2B,CAAEG,MAAO,ICCpC,EAA4B,6BAA5B,EAAsE,8BAAtE,EAAuH,oCAAvH,EAAmL,yCAAnL,EAA8O,mC,SC6D9O,EAnDkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,GAA0BC,EAAAA,EAAAA,WAAS,WACjC,OAAO,UAAKC,EACb,IAFD,eAAOR,EAAP,KAAcS,EAAd,KAqBMC,EAAQ,WACZD,GAAS,UAAKD,GACf,EAEOH,EAAUL,EAAVK,MAER,OACE,mBAAQM,UAAWC,EAAnB,UACE,kBAAMN,SAlBW,SAAAO,GAEnB,GADAA,EAAMC,iBACe,KAAjBT,EAAMU,OACR,OAAOC,EAAAA,GAAAA,KAAW,oCAGpBV,GAAS,UAAKN,IACdU,GACD,EAUiCC,UAAWC,EAAzC,WACE,oBAAQK,KAAK,SAASN,UAAWC,EAAjC,WACE,SAAC,MAAD,CAAUM,MAAO,CAAEC,WAAY,MAC/B,iBAAMR,UAAWC,EAAjB,wBAGF,kBACEQ,SAhCa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,EAAgBD,EAAhBC,KAAMC,EAAUF,EAAVE,MACdd,GAAS,SAAAe,GACP,OAAO,kBAAKA,GAAZ,cAAwBF,EAAOC,GAChC,GACF,EA4BOA,MAAOlB,EACPM,UAAWC,EACXU,KAAK,QACLL,KAAK,OACLQ,aAAa,MACbC,WAAS,EACTC,YAAY,iCAKrB,E,iBCRD,EA5CmB,WACjB,OAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMzB,EAAQwB,EAAaE,IAAI,SACzBC,EAAOH,EAAaE,IAAI,QAE9B,GAA4BxB,EAAAA,EAAAA,UAAS,IAArC,eAAOJ,EAAP,KAAe8B,EAAf,KACA,GAA0B1B,EAAAA,EAAAA,UAAS,MAAnC,eAAO2B,EAAP,KAAcC,EAAd,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,gHAEMC,EAAAA,EAAAA,IAAejC,EAAO2B,GAF5B,OAETO,EAFS,OAGfN,EAAUM,EAAOC,KAAKC,SAHP,uDAINC,EAJM,KAINA,SACTP,EAASO,GALM,4EAAH,qDAShBL,GACD,GAAE,CAAChC,EAAO2B,IAeX,OAJIE,GACFS,QAAQC,IAAIV,EAAMW,UAIlB,iCACE,SAAC,EAAD,CAAWvC,SAfU,SAAC,GAAe,IAAbD,EAAY,EAAZA,MAC1ByB,EAAgB,CAAEzB,MAAAA,EAAO2B,KAAM,IAC/BC,EAAU,GACX,KAaG,SAACa,EAAA,EAAD,CAAW3C,OAAQA,IAElBA,EAAO4C,OAAS,IAAK,mBAAQC,QAbX,WACrBlB,EAAgB,CAAEzB,MAAAA,EAAO2B,KAAMiB,OAAOjB,GAAQ,GAC/C,EAWyB,yBAG3B,C","sources":["components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx","components/Searchbar/searchInitialState.js","webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.jsx","components/pages/MoviePage/MoviesPage.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nconst MovieItem = ({ movie }) => {\n  const { title, id } = movie;\n  const location = useLocation();\n\n  return (\n    <Link to={`/movies/${id}`} state={{ from: location }}>\n      <li>{title}</li>\n    </Link>\n  );\n};\n\nexport default MovieItem;\n\nMovieItem.propTypes = {\n  movie: PropTypes.shape({\n    title: PropTypes.string,\n    id: PropTypes.number,\n  }),\n};\n","import PropTypes from 'prop-types';\n\nimport MovieItem from '../MovieItem/MovieItem';\n\nconst MovieList = ({ movies }) => {\n  const elements = movies.map(movie => {\n    return <MovieItem key={movie.id} movie={movie} />;\n  });\n\n  return <ul>{elements}</ul>;\n};\n\nexport default MovieList;\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      id: PropTypes.number,\n    })\n  ),\n};\n","const searchInitialState = { query: '' };\n\nexport default searchInitialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"Searchbar_Searchbar__5WKzV\",\"SearchForm\":\"Searchbar_SearchForm__XuPyK\",\"SearchFormButton\":\"Searchbar_SearchFormButton__dksRa\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__7AAWA\",\"SearchFormInput\":\"Searchbar_SearchFormInput__FT6Bx\"};","import { useState } from 'react';\n\nimport { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\n\nimport PropTypes from 'prop-types';\n\nimport searchInitialState from './searchInitialState';\n\nimport css from './Searchbar.module.css';\n\nconst Searchbar = ({ onSubmit }) => {\n  const [state, setState] = useState(() => {\n    return { ...searchInitialState };\n  });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (query.trim() === '') {\n      return toast.warn('ðŸ¦„ empty search field!');\n    }\n\n    onSubmit({ ...state });\n    reset();\n  };\n\n  const reset = () => {\n    setState({ ...searchInitialState });\n  };\n\n  const { query } = state;\n\n  return (\n    <header className={css.Searchbar}>\n      <form onSubmit={handleSubmit} className={css.SearchForm}>\n        <button type=\"submit\" className={css.SearchFormButton}>\n          <ImSearch style={{ margiRight: 0 }} />\n          <span className={css.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          onChange={handleChange}\n          value={query}\n          className={css.SearchFormInput}\n          name=\"query\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n\nexport default Searchbar;\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport MovieList from 'components/MovieList/MovieList';\n\nimport { getMovieByName } from 'components/shared/services/themoviedb-api';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const page = searchParams.get('page');\n\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const result = await getMovieByName(query, page);\n        setMovies(result.data.results);\n      } catch ({ response }) {\n        setError(response);\n        return;\n      }\n    };\n    fetchMovie();\n  }, [query, page]);\n\n  const handleFormSubmit = ({ query }) => {\n    setSearchParams({ query, page: 1 });\n    setMovies([]);\n  };\n\n  const handleNextPage = () => {\n    setSearchParams({ query, page: Number(page) + 1 });\n  };\n\n  if (error) {\n    console.log(error.message);\n  }\n\n  return (\n    <>\n      <Searchbar onSubmit={handleFormSubmit} />\n      <MovieList movies={movies} />\n\n      {movies.length > 0 && <button onClick={handleNextPage}>LOAD MORE</button>}\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["movie","title","id","location","useLocation","to","state","from","elements","movies","map","query","onSubmit","useState","searchInitialState","setState","reset","className","css","event","preventDefault","trim","toast","type","style","margiRight","onChange","target","name","value","prevState","autoComplete","autoFocus","placeholder","useSearchParams","searchParams","setSearchParams","get","page","setMovies","error","setError","useEffect","fetchMovie","getMovieByName","result","data","results","response","console","log","message","MovieList","length","onClick","Number"],"sourceRoot":""}